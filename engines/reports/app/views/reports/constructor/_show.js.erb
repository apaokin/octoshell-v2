<% @alpaca_raw_json.each do |key, value| %>
  var <%= key %> =  <%= raw value.to_json %>;
<% end %>

function checkbox_changed(e){
  var array = this.parent.path.split('/');
  array.splice(0,2);

  var value = e.target.attributes[2].nodeValue;

  var label = this.domEl.find("input[data-checkbox-value='"+value+"']").parent().text();
  // console.log(e.target);
  if(array.length > 0){
    label = array.join('.') + '.' + label;
  }
  if(array.length > 0){
    value = array.join('.') + '.' + value;
  }

  var attributes_element = $("#main-form").alpaca('get').getControlByPath('attributes');

  attributes_element.resolveItemSchemaOptions(function(itemSchema, itemOptions, circular) {
      var insertionPoint = attributes_element.children.length;
      var itemData = Alpaca.createEmptyDataInstance(itemSchema);
      itemData['label'] = value;
      var copiedOptions = jQuery.extend(true,{}, itemOptions);
      copiedOptions.fields.order.label = label;
      attributes_element.addItem(insertionPoint, itemSchema, copiedOptions, itemData, function(item) {

      });
  });
}

function new_association(e){
  // console.log('wwww');
  var self = this;
  var class_name = $("#main-form").alpaca('get')
                  .getControlByPath('class_name').getValue();
  var path = this.path.split('/');
  path[0] = class_name;
  path.splice(1, 1);
  path[path.length-1] = this.getValue();
  // console.log(self);
  // console.log(self.parent.children.length);
  // console.log(self.parent.parent.children.length);
  // console.log(self.parent.childrenByPropertyId.keys);
  // if(self.parent.children.length == 1)
    $.ajax({
      dataType: "json",
      url: "<%= class_info_constructor_index_path %>",
      success: function( json ) {
          self.assocs = {};
          self.assocs.enum = json.associations;
          self.assocs.optionLabels = json.associations_labels;
          self.assocs.attributes = json.attributes;
          self.assocs.labels = json.types;
      },
      async: false,
      data: {
        assocs: path
      }
    });
  if(self.parent.childrenByPropertyId[this.getValue()]){
    alert('selected');
    return;
  }
  // console.log(self);
  // var index = this.schema.enum.indexOf(this.getValue());
  // if children
  // this.schema.enum.splice(index,1);
  // this.options.optionLabels.splice(index,1);
  var schema = {
    "title": this.getValue(),
    "type": "object",
    "properties":{
      "join":{
        "type": "radio",
        "title": '<%= t(".join_type") %>',
        "enum": ['inner', 'left'],
        "required": true,
      },
      "all_attributes": {
        "type": "array",
        "title": '<%= t(".choose_attributes") %>',
        "enum": self.assocs.attributes

      },
      "list":{
        "title": '<%= t(".link") %>',
        "enum": self.assocs.enum,
        // "required": true
      }
    }
  };
  var options = {
    "type": "object",
    "fields":{
      "join":{
        "optionLabels": ['<%= t(".inner_join") %>', '<%= t(".left_join") %>']
      },
      "all_attributes": {
        "type": "checkbox",
        "optionLabels": self.assocs.labels,
        "onFieldChange": checkbox_changed
      },
      "list":{
        "type": "select",
        "optionLabels": self.assocs.optionLabels,
        "onFieldChange": new_association
      }
    }
  };

  var data = {
    "join": "inner"
  }

  this.parent.addItem(this.getValue(), schema, options,
  data, this.parent.children[self.parent.children.length -1].getId(), function(item) {
    var last_index = self.parent.children.length -1;
    // if(self.parent.children.length == 2){
      var last = self.parent.children[last_index].containerItemEl;
      var first = self.parent.children[last_index-1].containerItemEl;
      first.after(last);
      self.setValue(null);
      self.refresh();
      apply_select();
      // $('<p>ddddddwadwadwadawdwad</p>').before(self.parent.children[0].containerItemEl);
      var button = $('<button> <%= t(".delete")%> </button>');
      var cur_elem = self.parent.children[self.parent.children.length -1];
      button.click(function(){
        // console.log(cur_elem.schema.title);
        // console.log()
        var array = cur_elem.path.split('/');
        array.splice(0,2);
        console.log(array);
        var begin = array.join('.');
        // console.log(array);
        var attributes_element = $("#main-form").alpaca('get').getControlByPath('attributes');
        attributes_element.children = attributes_element.children.filter(word => !word.getValue().label.startsWith(begin));
        attributes_element.refresh();

        // for(var i in attributes_element.children){
        //   var el = attributes_element.children[i];
        //   var value = el.getValue().label;
        //   console.log(value);
        //   console.log(begin);
        //   console.log(value.startsWith(begin));
        // }
        self.parent.removeItem(cur_elem.propertyId);
      });
      // if(self.parent.parent.path == "/")
        self.parent.children[self.parent.children.length -1].children[0].domEl.prepend(button);
      // var last.

    // }
  });



}


$("#main-form").alpaca({
    "data": {
    },
    "schema": {
        "type": "object",
        "properties": {
              "class_name":{
                "title": '<%= t(".class_name") %>',
                "enum": class_options,
                "required": true
              },
              "all_attributes":{
                "type": "array",
                "title": '<%= t(".choose attributes") %>'
              },
              "attributes":{
                "title": '<%= t(".associations") %>',
                "required": true,
                "type": "array",
                // "required": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "label":{
                      "hidden": true
                    },
                    "order":{
                      "enum": ["ASC", "DESC", "GROUP"]
                      // "title": '<%= t(".associations") %>',
                      // "required": true
                    },
                  }
                }

              },
              "association":{
                "type": "object",
                "properties":{
                  "list":{
                    "title": '<%= t(".link") %>',
                    // "enum": class_options,
                    // "required": true
                  }
                }
              }


        }
    },
    "options":{
      "focus":"",
      "hideInitValidationError":true,
      "fields":{
            "class_name":{
              "type": "select",
              "optionLabels": class_labels,
              "onFieldChange": function(e) {
                var self = this;
                $.getJSON( "<%= class_info_constructor_index_path %>", { assocs: [this.getValue()]} )
                  .done(function( json ) {
                    var al = $("#main-form").alpaca('get').getControlByPath('all_attributes');

                    al.schema.enum = json.attributes;
                    al.options.optionLabels = json.types;
                    // al.setValue('');
                    al.refresh();
                    var al = $("#main-form").alpaca('get').getControlByPath('association');
                    var schema = {
                      "type": "object"
                    };
                    var options = {
                      "type": "object",
                    }
                    al.children[0].schema.enum = json.associations;
                    al.children[0].options.optionLabels = json.associations_labels;
                    while(al.children.length > 1){
                      al.removeItem(al.children[1].propertyId);
                    }
                    al.children[0].setValue('');
                    al.children[0].refresh();
                    apply_select();
                    // al.addItem(self.getValue(), schema, options, null, al.children[0].getId(), function(item) {
                    //   apply_select();
                    //   var last = al.children[al.children.length-1].containerItemEl;
                    //   var first = al.children[al.children.length - 2].containerItemEl;
                    //   first.after(last);
                    // });
                  });
              }
            },
            "all_attributes":{
              "type": "checkbox",
              "onFieldChange": checkbox_changed
            },
            "attributes":{
              "type": "array",
              "toolbar":{
                "actions":[{
                  "action": "add",
                  "enabled": false,
                  "click": function(){
                    this.handleToolBarAddItemClick(function(item) {
                      // load_data_for_select( item.children[0], true);
                        //
                        // item.children[0].getControlEl().trigger('change');
                    });

                  }
                }]
              },
              "actionbar": {
                "actions": [{
                              "action": "add",
                              "enabled": false
                            }
                ]
              },
              "items": {
                "fields":{
                  "order": {
                    "vertical": false,
                    "type": "checkbox"


                   // "type": "select",
                   // "onFieldChange": function(e) {
                   //  load_data_for_select(this, false);
                   //
                   // }
                 }
                }
              }
            },
            "association":{
              "type": "object",
              "fields":{
                "list":{
                  "type": "select",
                  "onFieldChange": new_association
                }
              }

            }

      },
      "form": {
            "attributes": {
                "method": "post",
                "action": "action"
            },
            "buttons": {
                "submit": {
                    "title": '<%= t(".build") %>',
                    "click": function() {
                       this.validate(true);
                       this.refreshValidationState(true);
                       if (!this.isValid(true)) {
                           return;
                       }
                    }
                }
        }
    },
    "view": {
        "layout": {
            "template": "<%=j render partial: 'form_layout' %>",
            "bindings": {
                "class_name": "column-1",
                "all_attributes": "column-1",
                "association": "column-1",
                "attributes" : "column-2"
            }
        }
    }

  },
  "postRender": function(control) {
    apply_select();
    $("#main-form").alpaca('get').getControlByPath('class_name').setValue('Core::Cluster');
    $("#main-form").alpaca('get').getControlByPath('class_name').getControlEl().trigger('change');


}});
